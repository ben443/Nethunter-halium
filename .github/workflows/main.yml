name: Build GKI & Generic 32 Images

on:
  workflow_dispatch:
    inputs:
      build_target:
        description: 'Build target: gki-5.10 or generic-32'
        required: true
        default: 'gki-5.10'

env:
  LANG: en_US.UTF-8
  LC_ALL: en_US.UTF-8

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up Docker (using official Action for maintainability)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Install build dependencies (consider using a Docker image for faster builds)
      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt full-upgrade
          sudo apt-get install -y git make curl wget gdisk parted \
            adb fastboot android-sdk-libsparse-utils \
            python3 python3-pip \
            qemu-user-static debootstrap schroot \
            build-essential devscripts crossbuild-essential-arm64 \
            android-sdk-platform-tools-common repo python3-pycryptodome gzip lz4 locales
          # Install LXD from snap
           sudo apt-get install -y snapd
           sudo snap install lxd
           sudo lxd init --auto

      - name: Set up locales
        run: |
          sudo locale-gen en_US.UTF-8

      # Cache Python dependencies to speed up subsequent builds
      - name: Cache Python dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # Make setup.sh executable and run it
     # - name: Run setup.sh
     #   run: |
       #   chmod +x setup.sh
          #./setup.sh

      # Make build.sh executable and run it
      - name: Build Nethunter-Halium Image
        run: |
          chmod +x build.sh
          ./build.sh ${{ github.event.inputs.build_target }}

      # Validate build output before uploading
      - name: Validate Build Output
        run: |
          ls -lh build/out/
          if ! ls build/out/nethunter-halium-*.img 1> /dev/null 2>&1; then
            echo "Build artifact not found!" >&2
            exit 1
          fi

      # Upload the build artifact
      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: nethunter-halium-${{ github.event.inputs.build_target }}
          path: build/out/nethunter-halium-*.img
